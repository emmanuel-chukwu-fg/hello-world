The meeting started with Bernard sharing his screen. He began by explaining the content of the Architectural Diagram, which encompasses the Blue Stack (their current infrastructure deployment) and the Green Stack (the future deployment). The two stacks have distinct interfaces: the north stack serves as the interface for users of the Blue/Green, while the south stack supports either the blue or the green stack.

Regarding Traffic Filtering:
In the current setup, an internet gateway is employed, and a cluster of Palo Alto Filtering is being established, routed internally to the south stack.
In the future setup (Green Stack), traffic from the internet gateway will be directed through a gateway load balancer endpoint to the gateway load balancer itself. Following this, a fleet of Palo Alto Appliances will be positioned behind it.
Bernard clarified that the purpose of the demo is not to delve deeply into details but to gain an understanding of what's happening between the blue and the green deployment. Vlad mentioned that presently, there is no network load balancer, and traffic hits different endpoints like two different ApacheFTP.
Bernard proposed introducing a network load balancing function between the Palo Alto instances, making it easier to transition from the blue to the green stack. The network load balancer would act as a proxy between the stack and the other resources behind them. Vlad assured that they could provide access to the Proof of Concept (POC) since the service is currently running in a Non-Prod AWS Account.
Vlad also mentioned that Kyriba would handle the traffic filtering part, and they would assist in automating it along with the other services. The remainder of the meeting was spent with Bernard going through the Architectural diagram with Vlad.

FTP:
External Network: The contents behind it, whether it involves filtering or north, need definition. Credential management is local, represented by the icon denoting local identity. Files are stored in databases (DBS) or local gateway drives.
For the future, they plan to use more services from AWS, such as the Transfer family as the FTP server. Credential-wise, they can use IAM or any type of Kyriba SSO activity, with the goal of eliminating local identities. Bernard discussed the benefits of S3 that could be incorporated into the project.
Vlad raised a question about preserving source IP address filtering. Bernard suggested putting IP addresses into IAM for this purpose. Vlad expressed a preference for generating a POC on this so that he can review it with Kyriba subject matter experts. The meeting concluded with Bernard going through the Architectural diagram with Vlad.


Kyriba App:
Currently, there are EC2 machines in use as of today, and there are also some backend functions. The idea is to replace the EC2 machines with clusters in Kubernetes and migrate the application to containers. Vlad confirmed the above and stated that they already have that setup running in one of their preproduction systems.
So, Bernard asked Vlad, what does he expect in reply to this? Vlad's response was nothing specific regarding automation, but the south part of the diagram will be affected when it comes to the state, particularly the migration of the state from on-premises to AWS. This is where he expects us to collaborate and work together.
Vlad also mentioned that they already have a team of in-house engineers working on the Kyriba App side of things, and he will reach out to them to see if they require any assistance.
We have the south stack that we need to migrate from on-premises to AWS, and that should be our focus when we think about the Kyriba App.
Running on Kubernetes (K8S) and the Blue and Green Stack - from my understanding, the microservices on the Kyriba side are already running on Kubernetes. Therefore, we plan to have the Blue Stack running on EKS and the Green Stack as well. The primary changes will occur in the south stack compared to the Kyriba app stack. Specifically, the south stack involves Oracle, S3, and PostgreSQL.

SMTP is a basic consideration. Let's assume the use of SMTP, although details are limited. We discussed the possibility of transferring this to AWS SES.

Concerning emails in Kyriba, they work unidirectionally, and as we were discussing, Bernard mentioned the need for inbox bots. From a customer's perspective, they only receive emails and don't send emails to Kyriba. Vlad emphasized the importance of controlling the IP address used for SES, ensuring it's dedicated to Kyriba and not shared with the public or AWS. These are simple requirements, and while they can be implemented, their value is contingent on having actual systems sending out emails since Kyriba is not receiving any.

A simple monitoring dashboard should be added, handling the entire mail message sending component. SES alone is insufficient, so additional components, such as a bouncing address implemented in WorkMail, are needed. Vlad suggested adding a monitoring dashboard to track the flow and the number of bounces, providing easy access to a management console for visibility into what's happening.

Regarding expectations, Vlad mentioned the automation of creating ECS and setting up DNS records, but he stressed that this isn't a high priority at the moment. He suggested transforming the discussed diagrams into feature files, providing a global architectural view with detailed descriptions of expectations for each component. The feature files will help prioritize tasks and provide clarity on what each component should deliver.

Looking ahead, Vlad proposed turning the diagrams into feature files for better visibility and prioritization. Bernard commended the progress and suggested planning the next steps. Vlad expressed confidence in the workflow but acknowledged that certain decisions need to be made before full-scale development can begin. Topics like FTP transfer family and data migration are areas where external help is appreciated. Additionally, the provisioning of a basic landing zone, crucial for using the transfer family, is on the radar.

In summary, the next steps include finalizing decisions, transforming diagrams into feature files, and addressing specific topics like FTP transfer family and data migration. While certain decisions may need more time, focusing on areas where expertise is clear, such as FTP transfer family, can drive immediate progress."
